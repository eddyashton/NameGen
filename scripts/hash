import sys
import random
import hashlib
import argparse 
random.seed(1)

parser = argparse.ArgumentParser(description='create a readable name with a key of any characters')
parser.add_argument('--animalnames', type __path__, metavar='', help='path to the first required file, animalnames')
parser.add_argument('--adjectives', type __path__, metavar='', help='path to the second required file, adjectiveslist')
parser.add_argument('I', '--key to transform', type int, metavar='', help='Key to transform into a name + adjective')

def animalnameslist(animalnames):

    with open(animalnames, 'r') as folder:
     linesanimal = folder.readlines()
    linesanimal = [lines.strip() for lines in linesanimal]
    return linesanimal
def adjectiveslist(adjectives):

    with open(adjectives, 'r') as folder:
     linesadjectives = folder.readlines()
    linesadjectives = [lines.strip() for lines in linesadjectives]
    return linesadjectives

def hashanimal(I):
    h = hashlib.md5(bytes(I, "utf-8"))
    Nanimals = int.from_bytes(h.digest(), "little")
    return (Nanimals)

def hashadjectives(I):
    h = hashlib.md5(bytes(I+"1", "utf-8"))
    Nadjectives = int.from_bytes(h.digest(), "little")
    return (Nadjectives)

def finalnames(Nanimalname, Nadjectives, l1, l2):
    Finalanimal = (l1[Nanimalname % len(l1)])
    Finaladjective = (l2[Nanimalname % len(l2)])
    Result = (Finaladjective +" "+ Finalanimal)
    print (Result)


# index = n
names = animalnameslist(sys.argv[1])
adjectives = adjectiveslist(sys.argv[2])
Nadjectives = hashadjectives(sys.argv[3])
Nanimalnames = hashanimal(sys.argv[3])

finalnames(Nanimalnames, Nadjectives, names, adjectives)